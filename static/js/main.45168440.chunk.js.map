{"version":3,"sources":["components/ContactForm/index.module.css","App.module.css","components/ContactForm/index.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/index.jsx","components/Filter/index.jsx","App.js","index.js","components/ContactList/index.module.css"],"names":["module","exports","ContactForm","initialState","name","number","state","submitHandler","event","preventDefault","contact","id","uuidv4","props","addPhonebook","setState","inputHandler","target","value","this","className","styles","form","onSubmit","label","onChange","type","placeholder","input","pattern","button","Component","ContactListItem","deleteContact","style","item","onClick","ContactList","filterContact","list","map","Filter","filter","App","contacts","newContact","find","toLowerCase","alert","prev","filterContacts","searchValue","length","includes","prevProps","prevState","nextContacts","localStorage","setItem","JSON","stringify","contactsFromStorage","parse","getItem","console","log","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45168440.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2hngO\",\"label\":\"ContactForm_label__isPqk\",\"input\":\"ContactForm_input__3Vn88\",\"button\":\"ContactForm_button__1Blkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__yMbKV\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './index.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  initialState = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuidv4(),\r\n    };\r\n    this.props.addPhonebook(contact);\r\n    this.setState({ ...this.initialState });\r\n  };\r\n\r\n  inputHandler = ({ target }) => {\r\n    const { value, name } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.submitHandler}>\r\n          <label className={styles.label}>\r\n            {' '}\r\n            Name\r\n            <input\r\n              onChange={this.inputHandler}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Add name\"\r\n              value={name}\r\n              className={styles.input}\r\n            ></input>\r\n          </label>\r\n          <label className={styles.label}>\r\n            {' '}\r\n            Number\r\n            <input\r\n              onChange={this.inputHandler}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"111-11-11\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              value={number}\r\n              className={styles.input}\r\n            ></input>\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addPhonebook: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactForm/index.module.css';\r\nimport style from './index.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <li key={id} className={style.item}>\r\n        {name} : {number}\r\n        <button className={styles.button} onClick={() => deleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './index.module.css';\r\n\r\nconst ContactList = ({ filterContact, deleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {filterContact.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          deleteContact={deleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filterContact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactForm/index.module.css';\r\n\r\nconst Filter = ({ filter, inputHandler }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <label className={styles.label}>\r\n        <input\r\n          onChange={inputHandler}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          placeholder=\"Search name\"\r\n          value={filter}\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  inputHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  componentDidMount() {\n    try {\n      const contactsFromStorage = JSON.parse(localStorage.getItem('contacts'));\n      contactsFromStorage && this.setState({ contacts: contactsFromStorage });\n    } catch {\n      console.log('Invalid JSON');\n    }\n  }\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  };\n\n  addPhonebook = newContact => {\n    this.state.contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n    )\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(prev => ({\n          contacts: [...prev.contacts, newContact],\n        }));\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const searchValue = filter.toLowerCase();\n    if (filter.length) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(searchValue),\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter(contact => contact.id !== id),\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filterContact = this.filterContacts();\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm addPhonebook={this.addPhonebook} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} inputHandler={this.inputHandler} />\n        <ContactList\n          filterContact={filterContact}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__tzEFu\",\"item\":\"ContactList_item__4DomZ\"};"],"sourceRoot":""}